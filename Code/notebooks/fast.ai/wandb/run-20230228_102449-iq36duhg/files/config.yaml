wandb_version: 1

CastToTensor:
  desc: null
  value: true
Learner:
  desc: null
  value:
    _name: <fastai.learner.Learner object at 0x000001DBE4889460>
    arch: torchvision.models.resnet.resnet18
    default_cbs: true
    loss_func:
      _name:
        _name: FlattenedLoss of CrossEntropyLoss()
        axis: -1
        flatten: true
        floatify: false
        is_2d: true
      axis: -1
      flatten: true
      floatify: false
      is_2d: true
    lr: 0.001
    metrics: fastai.metrics.accuracy
    model_dir: models
    moms:
    - 0.95
    - 0.85
    - 0.95
    n_out: 2
    normalize: true
    opt_func: fastai.optimizer.Adam
    path: .
    pretrained: true
    splitter: fastai.vision.learner._resnet_split
    train_bn: true
    wd: null
    wd_bn_bias: false
ParamScheduler:
  desc: null
  value: true
ProgressCallback:
  desc: null
  value: true
Recorder:
  desc: null
  value:
    add_time: true
    train_metrics: false
    valid_metrics: true
TrainEvalCallback:
  desc: null
  value: true
WandbCallback:
  desc: null
  value:
    dataset_name: null
    log: null
    log_dataset: false
    log_model: false
    log_preds: true
    log_preds_every_epoch: false
    model_name: null
    n_preds: 36
    reorder: true
    seed: 12345
    valid_dl: null
_wandb:
  desc: null
  value:
    cli_version: 0.13.10
    framework: fastai
    is_jupyter_run: true
    is_kaggle_kernel: false
    python_version: 3.9.6
    start_time: 1677576289.605862
    t:
      1:
      - 1
      - 4
      - 5
      - 41
      - 53
      - 55
      2:
      - 1
      - 4
      - 5
      - 41
      - 53
      - 55
      3:
      - 23
      4: 3.9.6
      5: 0.13.10
      8:
      - 1
      - 3
      - 5
batch per epoch:
  desc: null
  value: 375
batch size:
  desc: null
  value: 64
dataset.tfms:
  desc: null
  value: '[Pipeline: wrapper.<locals>.get_x -> PILBase.create, Pipeline: wrapper.<locals>.get_y
    -> Categorize -- {''vocab'': None, ''sort'': True, ''add_na'': False}]'
device:
  desc: null
  value: cpu
dls.after_batch:
  desc: null
  value: "Pipeline: IntToFloatTensor -- {'div': 255.0, 'div_mask': 1} -> Normalize\
    \ -- {'mean': tensor([[[[0.4850]],\n\n         [[0.4560]],\n\n         [[0.4060]]]]),\
    \ 'std': tensor([[[[0.2290]],\n\n         [[0.2240]],\n\n         [[0.2250]]]]),\
    \ 'axes': (0, 2, 3)}"
dls.after_item:
  desc: null
  value: 'Pipeline: ToTensor'
dls.before_batch:
  desc: null
  value: 'Pipeline: '
frozen:
  desc: null
  value: false
frozen idx:
  desc: null
  value: 0
input 1 dim 1:
  desc: null
  value: 64
input 1 dim 2:
  desc: null
  value: 3
input 1 dim 3:
  desc: null
  value: 50
input 1 dim 4:
  desc: null
  value: 50
model parameters:
  desc: null
  value: 11704896
n_inp:
  desc: null
  value: 1
